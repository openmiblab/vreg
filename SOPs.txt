SOPs for maintainers
********************

Setup
-----

cd to vreg top folder

On windows:
>>> python -m venv .venv           # create virtual environment
>>> .venv/Scripts/activate        # activate virtual environment

You may have to select the Python interpreter in the .venv folder. In VSCode:
View > Command Palette > Python select interpreter -> enter interpreter path 
(.venv/Scripts/python.exe)

Install requirements:

>>> pip install -r requirements.txt

Note: the documentation needs to follow the published package, so 
avoid installing vreg-package from source as this risks including 
unpublished methods in the docs.


Build documentation locally
---------------------------

>> cd docs
>>> ./make html

To see the docs, open: vreg/docs/build/html/index.html

To make all autogenerated documentation from scratch, first delete all auto-generated content:

- delete docs/build
- delete all folders inside docs/source/generated/
- run docs/source/make_animations.py


Building release notes
----------------------
- Get a personal token on https://github.com/settings/tokens (does not need any permissions)
- Save the token in the environment variable GH_TOKEN. On windows:
>>> $env:GH_TOKEN='token'
- Build the changelog from current version to current dev. For instance:
>>> changelist openmiblab/vreg-package v0.0.3 main --format rst
- Copy-paste the terminal output in an .rst file and save it in docs/source/releases
- Edit the content of the file manually as needed
- Add an entry in the index of docs/source/releases


Updating the website
--------------------

- Push your latest changes to vreg/main. This will automatically 
build and deploy the docs on openmiblab.gitub.io/vreg.
